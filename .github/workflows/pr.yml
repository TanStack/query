name: pr
on: [pull_request]
env:
  NX_DAEMON: false
  NX_VERBOSE_LOGGING: true
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - name: Run Tests
        uses: nick-fields/retry@v2.8.3
        with:
          command: pnpm test:lib --base=${{ github.event.pull_request.base.sha }}
          timeout_minutes: 5
          max_attempts: 3
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - run: pnpm run test:eslint --base=${{ github.event.pull_request.base.sha }}
  typecheck:
    name: 'Typecheck'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - run: pnpm run test:types --base=${{ github.event.pull_request.base.sha }}
  format:
    name: 'Format'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - run: pnpm run test:format --base=${{ github.event.pull_request.base.sha }}
  test-react-17:
    name: 'Test React 17'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - name: Run Tests
        uses: nick-fields/retry@v2.8.3
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: pnpm run test:react:17 --base=${{ github.event.pull_request.base.sha }}
        env:
          REACTJS_VERSION: 17
  test-build:
    name: 'Test Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --filter "./packages/**" --filter query --prefer-offline install
      - run: pnpm run test:build
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
