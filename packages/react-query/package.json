{
  "name": "@tanstack/react-query",
  "version": "5.0.0-beta.31",
  "description": "Hooks for managing, caching and syncing asynchronous and remote data in React",
  "author": "tannerlinsley",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/TanStack/query.git",
    "directory": "packages/react-query"
  },
  "homepage": "https://tanstack.com/query",
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/tannerlinsley"
  },
  "type": "module",
  "types": "build/legacy/index.d.ts",
  "main": "build/legacy/index.cjs",
  "module": "build/legacy/index.js",
  "exports": {
    ".": {
      "import": {
        "types": "./build/modern/index.d.ts",
        "default": "./build/modern/index.js"
      },
      "require": {
        "types": "./build/modern/index.d.cts",
        "default": "./build/modern/index.cjs"
      }
    },
    "./package.json": "./package.json"
  },
  "sideEffects": false,
  "scripts": {
    "clean": "rimraf ./build && rimraf ./coverage",
    "test:eslint": "eslint --ext .ts,.tsx ./src",
    "test:types": "tsc",
    "test:lib": "vitest run --coverage",
    "test:lib:dev": "pnpm run test:lib --watch",
    "test:build": "publint --strict",
    "build": "pnpm build:tsup && pnpm build:codemods",
    "build:tsup": "tsup",
    "build:codemods": "cpy ../codemods/* ./build/codemods"
  },
  "files": [
    "build",
    "src",
    "!build/codemods/node_modules",
    "!build/codemods/vitest.config.ts",
    "!build/codemods/**/__testfixtures__",
    "!build/codemods/**/__tests__"
  ],
  "dependencies": {
    "@tanstack/query-core": "workspace:*",
    "client-only": "0.0.1"
  },
  "devDependencies": {
    "@types/react": "^18.2.4",
    "@types/react-dom": "^18.2.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-error-boundary": "^3.1.4"
  },
  "peerDependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-native": "*"
  },
  "peerDependenciesMeta": {
    "react-dom": {
      "optional": true
    },
    "react-native": {
      "optional": true
    }
  }
}
